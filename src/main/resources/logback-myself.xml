<?xml version="1.0" encoding="UTF-8"?>
<!--
    scan：当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
    scanPeriod：设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒当scan为true时，此属性生效。默认的时间间隔为1分钟。
    debug：当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。
-->
<configuration debug="false" scan="true" scanPeriod="3600 seconds">
    <!-- 文件相对保存路径设置可分以下三种：
        1. value=“logs” – 表示保存到程序运行目录下的logs目录
        2. value=“./” – 表示保存到程序运行目录
        3. value=“../logs” – 表示保存到程序运行目录的父目录
    -->
    <property name="LOG_HOME" value="logs"/>
    <property name="ROOT_LOG_LEVEL" value="INFO"/>
    <property name="FILE_LOG_LEVEL" value="DEBUG"/>
    <property name="CONSOLE_LOG_LEVEL" value="DEBUG"/>
    <property name="FILE_NAME" value="springbootlearn"/>
    <!-- 定义日志文件大小和周期 -->
    <property name="log.maxSize" value="100MB"/>
    <property name="log.maxHistory" value="30"/>
    <!-- 日志格式配置，下面提供了两种方案 -->
<!--    <property name="CONSOLE_LOG_PATTERN"-->
<!--              value="%d{yyyy-MM-dd HH:mm:ss.SSS} %highlight(%-5level) -&#45;&#45; %magenta([%X{traceId}]) [%thread] %green(%class{50}):%cyan(%method) : %msg%n">-->
<!--    </property>-->
    <property name="FILE_LOG_PATTERN"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level --- [%X{traceId}] [%thread] %class{50}:%method : %msg%n">
    </property>

    <property name="CONSOLE_LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger{50} - %msg%n"/>

    <!-- appender：定义了日志输出目的地
        1. ch.qos.logback.core.ConsoleAppender定义的目的地为控制台，不存储进日志文件
        2. ch.qos.logback.core.rolling.RollingFileAppender定义的目的地为日志文件，不在控制台显示
    -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <!--定义了一个过滤器,在LEVEL之下的日志输出不会被打印出来-->
        <!--这里定义了DEBUG，也就是控制台不会输出比DEBUG级别小的日志-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>${CONSOLE_LOG_LEVEL}</level>
<!--            <level>INFO</level>-->
        </filter>
        <!--定义控制台输出格式-->
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 日志名称 -->
        <file>${LOG_HOME}/${FILE_NAME}.log</file>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>${FILE_LOG_LEVEL}</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>
                ${LOG_HOME}/${FILE_NAME}.%d{yyyy-MM-dd}.%i.log.zip
            </fileNamePattern>
            <maxHistory>${log.maxHistory}</maxHistory>
            <maxFileSize>${log.maxSize}</maxFileSize>
        </rollingPolicy>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 可以为不同包或类定义日志各自的日志输出级别 -->
    <logger name="org.springframework.web" level="DEBUG"/>

    <logger name="com.xxc.learnboot" level="DEBUG"/>
<!--    关闭特定包的日志输出,注意要写包的全名-->
    <logger name="com.zaxxer.hikari" level="OFF"/>
    <logger name="org.hibernate.event" level="OFF"/>
    <logger name="org.springframework.orm.jpa" level="OFF"/>

    <!--root是默认的logger，默认级别是debug-->
    <root level="${ROOT_LOG_LEVEL}">
        <!-- 此appender向控制台输出 -->
        <appender-ref ref="console"/>
        <!-- 此appender生成日志文件 -->
        <appender-ref ref="file"/>
    </root>
</configuration>
